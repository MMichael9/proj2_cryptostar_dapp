{
  "contractName": "Counters",
  "abi": [],
  "metadata": "{\"compiler\":{\"version\":\"0.5.16+commit.9c3226ce\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"author\":\"Matt Condon (@shrugs)\",\"details\":\"Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.\",\"methods\":{},\"title\":\"Counters\"},\"userdoc\":{\"methods\":{}}},\"settings\":{\"compilationTarget\":{\"/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":\"Counters\"},\"evmVersion\":\"istanbul\",\"libraries\":{},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol\":{\"keccak256\":\"0x421cd6003cb6fd887f804f89acdd3c3cdf9073f757106edd6f9204c3545dff6c\",\"urls\":[\"bzz-raw://82cdaab90612e81c4de18c2cfe9f5d3b6889f706b1dda255b7a86b6683f0c8f9\",\"dweb:/ipfs/QmYPCGiCpbcQzsRxC2wFT5SPYYq123tGbMakmPqZkjix4y\"]},\"/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol\":{\"keccak256\":\"0x9194acaa467da3228cea42c3168b23fae17941800328032108e3153d1a0fbb5f\",\"urls\":[\"bzz-raw://eaaa71d327785f02b97ae8fe9e78f6503274303db082379fb8f3af088f1f94f3\",\"dweb:/ipfs/QmQTCRvgddXvbwRpVYNr6F2qtyrf98u6qaz97BsSJ1PfZe\"]}},\"version\":1}",
  "bytecode": "0x60556023600b82828239805160001a607314601657fe5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202860b4ce9d0a5c6df26eb2a4b3aa2a565da940f0eacbb86b93ec837be4ee873164736f6c63430005100032",
  "deployedBytecode": "0x73000000000000000000000000000000000000000030146080604052600080fdfea265627a7a723158202860b4ce9d0a5c6df26eb2a4b3aa2a565da940f0eacbb86b93ec837be4ee873164736f6c63430005100032",
  "sourceMap": "642:780:2:-;;132:2:-1;166:7;155:9;146:7;137:37;255:7;249:14;246:1;241:23;235:4;232:33;222:2;;269:9;222:2;293:9;290:1;283:20;323:4;314:7;306:22;347:7;338;331:24",
  "deployedSourceMap": "642:780:2:-;;;;;;;;",
  "source": "pragma solidity ^0.5.0;\r\n\r\nimport \"../math/SafeMath.sol\";\r\n\r\n/**\r\n * @title Counters\r\n * @author Matt Condon (@shrugs)\r\n * @dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\r\n * of elements in a mapping, issuing ERC721 ids, or counting request ids.\r\n *\r\n * Include with `using Counters for Counters.Counter;`\r\n * Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\r\n * overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\r\n * directly accessed.\r\n */\r\nlibrary Counters {\r\n    using SafeMath for uint256;\r\n\r\n    struct Counter {\r\n        // This variable should never be directly accessed by users of the library: interactions must be restricted to\r\n        // the library's function. As of Solidity v0.5.2, this cannot be enforced, though there is a proposal to add\r\n        // this feature: see https://github.com/ethereum/solidity/issues/4637\r\n        uint256 _value; // default: 0\r\n    }\r\n\r\n    function current(Counter storage counter) internal view returns (uint256) {\r\n        return counter._value;\r\n    }\r\n\r\n    function increment(Counter storage counter) internal {\r\n        counter._value += 1;\r\n    }\r\n\r\n    function decrement(Counter storage counter) internal {\r\n        counter._value = counter._value.sub(1);\r\n    }\r\n}\r\n",
  "sourcePath": "C:\\Users\\micha\\OneDrive\\Desktop\\block\\DAPP Project 5\\nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code\\node_modules\\openzeppelin-solidity\\contracts\\drafts\\Counters.sol",
  "ast": {
    "absolutePath": "/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
    "exportedSymbols": {
      "Counters": [
        292
      ]
    },
    "id": 293,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 245,
        "literals": [
          "solidity",
          "^",
          "0.5",
          ".0"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "absolutePath": "/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
        "file": "../math/SafeMath.sol",
        "id": 246,
        "nodeType": "ImportDirective",
        "scope": 293,
        "sourceUnit": 488,
        "src": "27:30:2",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [],
        "contractDependencies": [],
        "contractKind": "library",
        "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
        "fullyImplemented": true,
        "id": 292,
        "linearizedBaseContracts": [
          292
        ],
        "name": "Counters",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "id": 249,
            "libraryName": {
              "contractScope": null,
              "id": 247,
              "name": "SafeMath",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 487,
              "src": "672:8:2",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_SafeMath_$487",
                "typeString": "library SafeMath"
              }
            },
            "nodeType": "UsingForDirective",
            "src": "666:27:2",
            "typeName": {
              "id": 248,
              "name": "uint256",
              "nodeType": "ElementaryTypeName",
              "src": "685:7:2",
              "typeDescriptions": {
                "typeIdentifier": "t_uint256",
                "typeString": "uint256"
              }
            }
          },
          {
            "canonicalName": "Counters.Counter",
            "id": 252,
            "members": [
              {
                "constant": false,
                "id": 251,
                "name": "_value",
                "nodeType": "VariableDeclaration",
                "scope": 252,
                "src": "1044:14:2",
                "stateVariable": false,
                "storageLocation": "default",
                "typeDescriptions": {
                  "typeIdentifier": "t_uint256",
                  "typeString": "uint256"
                },
                "typeName": {
                  "id": 250,
                  "name": "uint256",
                  "nodeType": "ElementaryTypeName",
                  "src": "1044:7:2",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  }
                },
                "value": null,
                "visibility": "internal"
              }
            ],
            "name": "Counter",
            "nodeType": "StructDefinition",
            "scope": 292,
            "src": "701:379:2",
            "visibility": "public"
          },
          {
            "body": {
              "id": 262,
              "nodeType": "Block",
              "src": "1162:40:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "expression": {
                      "argumentTypes": null,
                      "id": 259,
                      "name": "counter",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 254,
                      "src": "1180:7:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                        "typeString": "struct Counters.Counter storage pointer"
                      }
                    },
                    "id": 260,
                    "isConstant": false,
                    "isLValue": true,
                    "isPure": false,
                    "lValueRequested": false,
                    "memberName": "_value",
                    "nodeType": "MemberAccess",
                    "referencedDeclaration": 251,
                    "src": "1180:14:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "functionReturnParameters": 258,
                  "id": 261,
                  "nodeType": "Return",
                  "src": "1173:21:2"
                }
              ]
            },
            "documentation": null,
            "id": 263,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "current",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 255,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 254,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "1105:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 253,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 252,
                    "src": "1105:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1104:25:2"
            },
            "returnParameters": {
              "id": 258,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 257,
                  "name": "",
                  "nodeType": "VariableDeclaration",
                  "scope": 263,
                  "src": "1153:7:2",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 256,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1153:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1152:9:2"
            },
            "scope": 292,
            "src": "1088:114:2",
            "stateMutability": "view",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 274,
              "nodeType": "Block",
              "src": "1263:38:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 272,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 268,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 265,
                        "src": "1274:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 270,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 251,
                      "src": "1274:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "+=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "hexValue": "31",
                      "id": 271,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": true,
                      "kind": "number",
                      "lValueRequested": false,
                      "nodeType": "Literal",
                      "src": "1292:1:2",
                      "subdenomination": null,
                      "typeDescriptions": {
                        "typeIdentifier": "t_rational_1_by_1",
                        "typeString": "int_const 1"
                      },
                      "value": "1"
                    },
                    "src": "1274:19:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 273,
                  "nodeType": "ExpressionStatement",
                  "src": "1274:19:2"
                }
              ]
            },
            "documentation": null,
            "id": 275,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "increment",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 266,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 265,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 275,
                  "src": "1229:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 264,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 252,
                    "src": "1229:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1228:25:2"
            },
            "returnParameters": {
              "id": 267,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1263:0:2"
            },
            "scope": 292,
            "src": "1210:91:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          },
          {
            "body": {
              "id": 290,
              "nodeType": "Block",
              "src": "1362:57:2",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 288,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "expression": {
                        "argumentTypes": null,
                        "id": 280,
                        "name": "counter",
                        "nodeType": "Identifier",
                        "overloadedDeclarations": [],
                        "referencedDeclaration": 277,
                        "src": "1373:7:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                          "typeString": "struct Counters.Counter storage pointer"
                        }
                      },
                      "id": 282,
                      "isConstant": false,
                      "isLValue": true,
                      "isPure": false,
                      "lValueRequested": true,
                      "memberName": "_value",
                      "nodeType": "MemberAccess",
                      "referencedDeclaration": 251,
                      "src": "1373:14:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "arguments": [
                        {
                          "argumentTypes": null,
                          "hexValue": "31",
                          "id": 286,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": true,
                          "kind": "number",
                          "lValueRequested": false,
                          "nodeType": "Literal",
                          "src": "1409:1:2",
                          "subdenomination": null,
                          "typeDescriptions": {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          },
                          "value": "1"
                        }
                      ],
                      "expression": {
                        "argumentTypes": [
                          {
                            "typeIdentifier": "t_rational_1_by_1",
                            "typeString": "int_const 1"
                          }
                        ],
                        "expression": {
                          "argumentTypes": null,
                          "expression": {
                            "argumentTypes": null,
                            "id": 283,
                            "name": "counter",
                            "nodeType": "Identifier",
                            "overloadedDeclarations": [],
                            "referencedDeclaration": 277,
                            "src": "1390:7:2",
                            "typeDescriptions": {
                              "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                              "typeString": "struct Counters.Counter storage pointer"
                            }
                          },
                          "id": 284,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "memberName": "_value",
                          "nodeType": "MemberAccess",
                          "referencedDeclaration": 251,
                          "src": "1390:14:2",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "id": 285,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "memberName": "sub",
                        "nodeType": "MemberAccess",
                        "referencedDeclaration": 406,
                        "src": "1390:18:2",
                        "typeDescriptions": {
                          "typeIdentifier": "t_function_internal_pure$_t_uint256_$_t_uint256_$returns$_t_uint256_$bound_to$_t_uint256_$",
                          "typeString": "function (uint256,uint256) pure returns (uint256)"
                        }
                      },
                      "id": 287,
                      "isConstant": false,
                      "isLValue": false,
                      "isPure": false,
                      "kind": "functionCall",
                      "lValueRequested": false,
                      "names": [],
                      "nodeType": "FunctionCall",
                      "src": "1390:21:2",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint256",
                        "typeString": "uint256"
                      }
                    },
                    "src": "1373:38:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "id": 289,
                  "nodeType": "ExpressionStatement",
                  "src": "1373:38:2"
                }
              ]
            },
            "documentation": null,
            "id": 291,
            "implemented": true,
            "kind": "function",
            "modifiers": [],
            "name": "decrement",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 278,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 277,
                  "name": "counter",
                  "nodeType": "VariableDeclaration",
                  "scope": 291,
                  "src": "1328:23:2",
                  "stateVariable": false,
                  "storageLocation": "storage",
                  "typeDescriptions": {
                    "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                    "typeString": "struct Counters.Counter"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 276,
                    "name": "Counter",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 252,
                    "src": "1328:7:2",
                    "typeDescriptions": {
                      "typeIdentifier": "t_struct$_Counter_$252_storage_ptr",
                      "typeString": "struct Counters.Counter"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1327:25:2"
            },
            "returnParameters": {
              "id": 279,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1362:0:2"
            },
            "scope": 292,
            "src": "1309:110:2",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "internal"
          }
        ],
        "scope": 293,
        "src": "642:780:2"
      }
    ],
    "src": "0:1424:2"
  },
  "legacyAST": {
    "attributes": {
      "absolutePath": "/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/drafts/Counters.sol",
      "exportedSymbols": {
        "Counters": [
          292
        ]
      }
    },
    "children": [
      {
        "attributes": {
          "literals": [
            "solidity",
            "^",
            "0.5",
            ".0"
          ]
        },
        "id": 245,
        "name": "PragmaDirective",
        "src": "0:23:2"
      },
      {
        "attributes": {
          "SourceUnit": 488,
          "absolutePath": "/C/Users/micha/OneDrive/Desktop/block/DAPP Project 5/nd1309-p2-Decentralized-Star-Notary-Service-Starter-Code/node_modules/openzeppelin-solidity/contracts/math/SafeMath.sol",
          "file": "../math/SafeMath.sol",
          "scope": 293,
          "symbolAliases": [
            null
          ],
          "unitAlias": ""
        },
        "id": 246,
        "name": "ImportDirective",
        "src": "27:30:2"
      },
      {
        "attributes": {
          "baseContracts": [
            null
          ],
          "contractDependencies": [
            null
          ],
          "contractKind": "library",
          "documentation": "@title Counters\n@author Matt Condon (@shrugs)\n@dev Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number\nof elements in a mapping, issuing ERC721 ids, or counting request ids.\n\n * Include with `using Counters for Counters.Counter;`\nSince it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath\noverflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never\ndirectly accessed.",
          "fullyImplemented": true,
          "linearizedBaseContracts": [
            292
          ],
          "name": "Counters",
          "scope": 293
        },
        "children": [
          {
            "children": [
              {
                "attributes": {
                  "contractScope": null,
                  "name": "SafeMath",
                  "referencedDeclaration": 487,
                  "type": "library SafeMath"
                },
                "id": 247,
                "name": "UserDefinedTypeName",
                "src": "672:8:2"
              },
              {
                "attributes": {
                  "name": "uint256",
                  "type": "uint256"
                },
                "id": 248,
                "name": "ElementaryTypeName",
                "src": "685:7:2"
              }
            ],
            "id": 249,
            "name": "UsingForDirective",
            "src": "666:27:2"
          },
          {
            "attributes": {
              "canonicalName": "Counters.Counter",
              "name": "Counter",
              "scope": 292,
              "visibility": "public"
            },
            "children": [
              {
                "attributes": {
                  "constant": false,
                  "name": "_value",
                  "scope": 252,
                  "stateVariable": false,
                  "storageLocation": "default",
                  "type": "uint256",
                  "value": null,
                  "visibility": "internal"
                },
                "children": [
                  {
                    "attributes": {
                      "name": "uint256",
                      "type": "uint256"
                    },
                    "id": 250,
                    "name": "ElementaryTypeName",
                    "src": "1044:7:2"
                  }
                ],
                "id": 251,
                "name": "VariableDeclaration",
                "src": "1044:14:2"
              }
            ],
            "id": 252,
            "name": "StructDefinition",
            "src": "701:379:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "current",
              "scope": 292,
              "stateMutability": "view",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 263,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 252,
                          "type": "struct Counters.Counter"
                        },
                        "id": 253,
                        "name": "UserDefinedTypeName",
                        "src": "1105:7:2"
                      }
                    ],
                    "id": 254,
                    "name": "VariableDeclaration",
                    "src": "1105:23:2"
                  }
                ],
                "id": 255,
                "name": "ParameterList",
                "src": "1104:25:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "",
                      "scope": 263,
                      "stateVariable": false,
                      "storageLocation": "default",
                      "type": "uint256",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "name": "uint256",
                          "type": "uint256"
                        },
                        "id": 256,
                        "name": "ElementaryTypeName",
                        "src": "1153:7:2"
                      }
                    ],
                    "id": 257,
                    "name": "VariableDeclaration",
                    "src": "1153:7:2"
                  }
                ],
                "id": 258,
                "name": "ParameterList",
                "src": "1152:9:2"
              },
              {
                "children": [
                  {
                    "attributes": {
                      "functionReturnParameters": 258
                    },
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": true,
                          "isPure": false,
                          "lValueRequested": false,
                          "member_name": "_value",
                          "referencedDeclaration": 251,
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "overloadedDeclarations": [
                                null
                              ],
                              "referencedDeclaration": 254,
                              "type": "struct Counters.Counter storage pointer",
                              "value": "counter"
                            },
                            "id": 259,
                            "name": "Identifier",
                            "src": "1180:7:2"
                          }
                        ],
                        "id": 260,
                        "name": "MemberAccess",
                        "src": "1180:14:2"
                      }
                    ],
                    "id": 261,
                    "name": "Return",
                    "src": "1173:21:2"
                  }
                ],
                "id": 262,
                "name": "Block",
                "src": "1162:40:2"
              }
            ],
            "id": 263,
            "name": "FunctionDefinition",
            "src": "1088:114:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "increment",
              "scope": 292,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 275,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 252,
                          "type": "struct Counters.Counter"
                        },
                        "id": 264,
                        "name": "UserDefinedTypeName",
                        "src": "1229:7:2"
                      }
                    ],
                    "id": 265,
                    "name": "VariableDeclaration",
                    "src": "1229:23:2"
                  }
                ],
                "id": 266,
                "name": "ParameterList",
                "src": "1228:25:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 267,
                "name": "ParameterList",
                "src": "1263:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "+=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 251,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 265,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 268,
                                "name": "Identifier",
                                "src": "1274:7:2"
                              }
                            ],
                            "id": 270,
                            "name": "MemberAccess",
                            "src": "1274:14:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "hexvalue": "31",
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": true,
                              "lValueRequested": false,
                              "subdenomination": null,
                              "token": "number",
                              "type": "int_const 1",
                              "value": "1"
                            },
                            "id": 271,
                            "name": "Literal",
                            "src": "1292:1:2"
                          }
                        ],
                        "id": 272,
                        "name": "Assignment",
                        "src": "1274:19:2"
                      }
                    ],
                    "id": 273,
                    "name": "ExpressionStatement",
                    "src": "1274:19:2"
                  }
                ],
                "id": 274,
                "name": "Block",
                "src": "1263:38:2"
              }
            ],
            "id": 275,
            "name": "FunctionDefinition",
            "src": "1210:91:2"
          },
          {
            "attributes": {
              "documentation": null,
              "implemented": true,
              "isConstructor": false,
              "kind": "function",
              "modifiers": [
                null
              ],
              "name": "decrement",
              "scope": 292,
              "stateMutability": "nonpayable",
              "superFunction": null,
              "visibility": "internal"
            },
            "children": [
              {
                "children": [
                  {
                    "attributes": {
                      "constant": false,
                      "name": "counter",
                      "scope": 291,
                      "stateVariable": false,
                      "storageLocation": "storage",
                      "type": "struct Counters.Counter",
                      "value": null,
                      "visibility": "internal"
                    },
                    "children": [
                      {
                        "attributes": {
                          "contractScope": null,
                          "name": "Counter",
                          "referencedDeclaration": 252,
                          "type": "struct Counters.Counter"
                        },
                        "id": 276,
                        "name": "UserDefinedTypeName",
                        "src": "1328:7:2"
                      }
                    ],
                    "id": 277,
                    "name": "VariableDeclaration",
                    "src": "1328:23:2"
                  }
                ],
                "id": 278,
                "name": "ParameterList",
                "src": "1327:25:2"
              },
              {
                "attributes": {
                  "parameters": [
                    null
                  ]
                },
                "children": [],
                "id": 279,
                "name": "ParameterList",
                "src": "1362:0:2"
              },
              {
                "children": [
                  {
                    "children": [
                      {
                        "attributes": {
                          "argumentTypes": null,
                          "isConstant": false,
                          "isLValue": false,
                          "isPure": false,
                          "lValueRequested": false,
                          "operator": "=",
                          "type": "uint256"
                        },
                        "children": [
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": true,
                              "isPure": false,
                              "lValueRequested": true,
                              "member_name": "_value",
                              "referencedDeclaration": 251,
                              "type": "uint256"
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "overloadedDeclarations": [
                                    null
                                  ],
                                  "referencedDeclaration": 277,
                                  "type": "struct Counters.Counter storage pointer",
                                  "value": "counter"
                                },
                                "id": 280,
                                "name": "Identifier",
                                "src": "1373:7:2"
                              }
                            ],
                            "id": 282,
                            "name": "MemberAccess",
                            "src": "1373:14:2"
                          },
                          {
                            "attributes": {
                              "argumentTypes": null,
                              "isConstant": false,
                              "isLValue": false,
                              "isPure": false,
                              "isStructConstructorCall": false,
                              "lValueRequested": false,
                              "names": [
                                null
                              ],
                              "type": "uint256",
                              "type_conversion": false
                            },
                            "children": [
                              {
                                "attributes": {
                                  "argumentTypes": [
                                    {
                                      "typeIdentifier": "t_rational_1_by_1",
                                      "typeString": "int_const 1"
                                    }
                                  ],
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": false,
                                  "lValueRequested": false,
                                  "member_name": "sub",
                                  "referencedDeclaration": 406,
                                  "type": "function (uint256,uint256) pure returns (uint256)"
                                },
                                "children": [
                                  {
                                    "attributes": {
                                      "argumentTypes": null,
                                      "isConstant": false,
                                      "isLValue": true,
                                      "isPure": false,
                                      "lValueRequested": false,
                                      "member_name": "_value",
                                      "referencedDeclaration": 251,
                                      "type": "uint256"
                                    },
                                    "children": [
                                      {
                                        "attributes": {
                                          "argumentTypes": null,
                                          "overloadedDeclarations": [
                                            null
                                          ],
                                          "referencedDeclaration": 277,
                                          "type": "struct Counters.Counter storage pointer",
                                          "value": "counter"
                                        },
                                        "id": 283,
                                        "name": "Identifier",
                                        "src": "1390:7:2"
                                      }
                                    ],
                                    "id": 284,
                                    "name": "MemberAccess",
                                    "src": "1390:14:2"
                                  }
                                ],
                                "id": 285,
                                "name": "MemberAccess",
                                "src": "1390:18:2"
                              },
                              {
                                "attributes": {
                                  "argumentTypes": null,
                                  "hexvalue": "31",
                                  "isConstant": false,
                                  "isLValue": false,
                                  "isPure": true,
                                  "lValueRequested": false,
                                  "subdenomination": null,
                                  "token": "number",
                                  "type": "int_const 1",
                                  "value": "1"
                                },
                                "id": 286,
                                "name": "Literal",
                                "src": "1409:1:2"
                              }
                            ],
                            "id": 287,
                            "name": "FunctionCall",
                            "src": "1390:21:2"
                          }
                        ],
                        "id": 288,
                        "name": "Assignment",
                        "src": "1373:38:2"
                      }
                    ],
                    "id": 289,
                    "name": "ExpressionStatement",
                    "src": "1373:38:2"
                  }
                ],
                "id": 290,
                "name": "Block",
                "src": "1362:57:2"
              }
            ],
            "id": 291,
            "name": "FunctionDefinition",
            "src": "1309:110:2"
          }
        ],
        "id": 292,
        "name": "ContractDefinition",
        "src": "642:780:2"
      }
    ],
    "id": 293,
    "name": "SourceUnit",
    "src": "0:1424:2"
  },
  "compiler": {
    "name": "solc",
    "version": "0.5.16+commit.9c3226ce.Emscripten.clang"
  },
  "networks": {},
  "schemaVersion": "3.3.4",
  "updatedAt": "2021-04-16T07:22:19.847Z",
  "devdoc": {
    "author": "Matt Condon (@shrugs)",
    "details": "Provides counters that can only be incremented or decremented by one. This can be used e.g. to track the number of elements in a mapping, issuing ERC721 ids, or counting request ids.  * Include with `using Counters for Counters.Counter;` Since it is not possible to overflow a 256 bit integer with increments of one, `increment` can skip the SafeMath overflow check, thereby saving gas. This does assume however correct usage, in that the underlying `_value` is never directly accessed.",
    "methods": {},
    "title": "Counters"
  },
  "userdoc": {
    "methods": {}
  }
}